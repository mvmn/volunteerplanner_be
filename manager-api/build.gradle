plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.gorylenko.gradle-git-properties" version "2.4.0"
    id 'java'
    id 'jacoco'
}

group = 'com.volunteer.api'
version = '1.0.0'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('tomcat.version', '9.0.62')
}

dependencies {
    // spring boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.auth0:java-jwt:3.18.3'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql:42.3.3'

    implementation project(':db-schema')
    
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.1'

    // spring doc
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'
    implementation 'org.springdoc:springdoc-openapi-security:1.6.6'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

    // common
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.apache.commons:commons-text:1.8'

    // cache
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // warning: unknown enum constant When.MAYBE
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    // logging
    implementation 'ch.qos.logback:logback-classic'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.0.1'
    
    // POI
    implementation 'org.apache.poi:poi-ooxml:5.2.2'

    // test
    testImplementation "org.testcontainers:junit-jupiter:1.16.3"
    testImplementation 'org.testcontainers:postgresql:1.16.3'

    testImplementation 'org.springframework.ws:spring-ws-test'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.flywaydb:flyway-core:8.5.2'
    testImplementation 'it.ozimov:embedded-redis:0.7.3'
}

jar {
    enabled = false
}

springBoot {
    buildInfo()
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/reports/jacoco/html")
    }

    afterEvaluate {
        classDirectories.setFrom(fileTree(dir: "$buildDir",
                includes: ['**/com/volunteer/api/**'],
                excludes: ['**/test/**', '**/model/**']))
    }
}

bootBuildInfo.mustRunAfter processResources
generateGitProperties.mustRunAfter processResources